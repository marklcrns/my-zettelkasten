<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title type="text">🔍 Draft 🔍 - Mark&#39;s Zettlekasten</title><id>https://marklucernas.dev/draft</id><updated>2021-11-23T06:46</updated><link href="https://marklucernas.dev/draft"/><icon>https://marklucernas.devstatic/favicon.ico</icon><entry><id>https://marklucernas.dev/secretary-problem</id><title type="text">Secretary Problem</title><updated>2021-11-23T06:46</updated><content type="html">&lt;p&gt;&lt;img alt=&#34;wide&#34; src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/c/c4/Secretary_problem_graphs.svg/1280px-Secretary_problem_graphs.svg.png&#34; title=&#34;Image from Wikimedia Commons (cc)&#34; /&gt;&lt;/p&gt;&lt;p&gt;The “secretary problem”&lt;span data-nosnippet=&#34;&#34;&gt;&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt; (aka marriage problem or dowry problem), with its mysterious origin, first came in public on February 1960 issue of &lt;em&gt;Scientific American&lt;/em&gt; in Martin Gardner’s beloved column on recreational mathematics. The problem: “Imagine you’re interviewing a set of applicants for a position as a secretary, and your goal is to maximize the chance of hiring the single best applicant in the pool. While you have no idea how to assign scores to individual applicants, you can easily judge which one you prefer. (A mathematician might say you have access only to &lt;em&gt;ordinal&lt;/em&gt; numbers–the relative ranks of the applicants compared to each other–but not to the &lt;em&gt;cardinal&lt;/em&gt; numbers, their ratings on some kind of general scale.) You interview the applicants in random order, one at a time. You can decide to offer the job to an applicant at any point and they are guaranteed to accept, terminating the search. But if you pass over an applicant, deciding not to hire them, they are gone forever.”&lt;span data-nosnippet=&#34;&#34;&gt;&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn2&#34; id=&#34;fnref2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;&lt;p&gt;Secretary Problem at a glance:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;There is one secretarial position available&lt;/li&gt;&lt;li&gt;The number &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; of applicants is known.&lt;/li&gt;&lt;li&gt;The applicants are interviewed sequentially in random order, each order being equally likely.&lt;/li&gt;&lt;li&gt;It is assumed that you can rank all the applicants from best to worst without ties. The decision to accept or reject an applicant must be based only on the relative ranks of those applicants interviewed so far.&lt;/li&gt;&lt;li&gt;An applicant once rejected cannot be recalled.&lt;/li&gt;&lt;li&gt;You are very particular and will be satisfied with nothing but the very best. (That is, your payoff is 1 if you choose the best of the &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; applicants and 0 otherwise.)&lt;/li&gt;&lt;/ol&gt;&lt;h3 id=&#34;simplest&#34;&gt;Simplest&lt;/h3&gt;&lt;p&gt;First, we can interpret the pass-and-reject rule where &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; is the number of rejects for &lt;span class=&#34;math inline&#34;&gt;\(r \ge 1\)&lt;/span&gt;, interviewer rejects the first &lt;span class=&#34;math inline&#34;&gt;\(r - 1\)&lt;/span&gt; applicants, and then chooses the next best in the relative ranking. So, the probability, &lt;span class=&#34;math inline&#34;&gt;\(\phi_{n}(r)\)&lt;/span&gt;, of choosing the best applicant for &lt;span class=&#34;math inline&#34;&gt;\(r = 1\)&lt;/span&gt;, and for &lt;span class=&#34;math inline&#34;&gt;\(r &amp;gt; 1\)&lt;/span&gt; is&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;$$
\begin{aligned}
\phi_{n}(r) &amp;amp;= \sum_{i = r}^{n} P\text{(ith applicant is selected and is the best)} \\
&amp;amp;= \sum_{i = r}^{n} P\text{(ith applicant is selected or ith applicant is the best)} \cdot P\text{(ith applicant is the best)} \\
&amp;amp;= \left [ \sum_{i = 1}^{r - 1} 0 + \sum_{i = 1}^{n} P\left ( \text{the best of the first i - 1 applicants is in the first r - 1 applicants or ith applicant is the best} \right ) \right ] \cdot \frac{1}{n} \\
&amp;amp;= \left [ \sum_{i = r}^{n} \frac{r - 1}{i - 1} \right ] \cdot \frac{1}{n} \\
&amp;amp;= \frac{r - 1}{n} \sum_{i = r}^{n} \frac{1}{i - 1} \\
\end{aligned}
$$&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The sum does not include when the number of automatically rejected applicants is &lt;span class=&#34;math inline&#34;&gt;\(r = 1\)&lt;/span&gt;, therefore, the only feasible solution to this is &lt;span class=&#34;math inline&#34;&gt;\(\phi_{n}(1)
= \frac{1}{n}\)&lt;/span&gt;. This sum is only valid if and only if the best applicant among the first &lt;span class=&#34;math inline&#34;&gt;\(i - 1\)&lt;/span&gt; applicants is among the first &lt;span class=&#34;math inline&#34;&gt;\(r - 1\)&lt;/span&gt; applicants that were rejected, hence, the selected better candidate can be selected from &lt;span class=&#34;math inline&#34;&gt;\(r &amp;gt; i\)&lt;/span&gt;. Put simply, there has to be a better candidate after the rejected ones, else, no candidate can be selected since the best one among all candidates were already rejected.&lt;/p&gt;&lt;p&gt;Integrating the sum letting &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; tend to infinity, writing &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; as the limit of &lt;span class=&#34;math inline&#34;&gt;\(\frac{r - 1}{n}\)&lt;/span&gt;, using &lt;span class=&#34;math inline&#34;&gt;\(t\)&lt;/span&gt; for &lt;span class=&#34;math inline&#34;&gt;\(\frac{i - 1}{n}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(dt\)&lt;/span&gt; for &lt;span class=&#34;math inline&#34;&gt;\(\frac{1}{n}\)&lt;/span&gt;, the sum can be approximated by the integral&lt;/p&gt;&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;$$
\phi_{n}(x) = x \int_{x}^{1} \frac{1}{t}\;dt = -x\ln(x)
$$&lt;/span&gt;&lt;/p&gt;&lt;p&gt;The value of &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; that maximizes the equation can be found by setting the derivative of &lt;span class=&#34;math inline&#34;&gt;\(\phi_{n}(x)\)&lt;/span&gt; with respect to &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; equal to zero, &lt;span class=&#34;math inline&#34;&gt;\(\frac{d}{dx}\phi_{n}(x) = 0\)&lt;/span&gt;, then solving for &lt;span class=&#34;math inline&#34;&gt;\(x\)&lt;/span&gt; we find that &lt;span class=&#34;math inline&#34;&gt;\(x = 1/e
= 0.367879 \cdots\)&lt;/span&gt;.&lt;/p&gt;&lt;p&gt;Thus, the optimal cutoff tends to &lt;span class=&#34;math inline&#34;&gt;\(n/e\)&lt;/span&gt; as &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; increases, and the best applicant is selected with probability &lt;span class=&#34;math inline&#34;&gt;\(1/e\)&lt;/span&gt;.&lt;/p&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://www.randomservices.org/random/urn/Secretary.html&#34;&gt;https://www.randomservices.org/random/urn/Secretary.html&lt;/a&gt; “The Secretary Problem”&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://www.math.upenn.edu/~ted/210F10/References/Secretary.pdf&#34;&gt;https://www.math.upenn.edu/~ted/210F10/References/Secretary.pdf&lt;/a&gt; “Who Solved the Secretary Problem?”&lt;/li&gt;&lt;/ul&gt;&lt;div id=&#34;footnotes&#34;&gt;&lt;ol&gt;&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://en.m.wikipedia.org/wiki/Secretary_problem&#34;&gt;https://en.m.wikipedia.org/wiki/Secretary_problem&lt;/a&gt; “Secretary Problem”&lt;/p&gt;&lt;a href=&#34;#fnref1&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;em&gt;Algorithms to Live By&lt;/em&gt; by Brian Christian and Tom Griffiths - Optimal Stopping&lt;/p&gt;&lt;a href=&#34;#fnref2&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</content><link href="https://marklucernas.dev/secretary-problem"/></entry><entry><id>https://marklucernas.dev/the-37-percent-rule</id><title type="text">The 37% Rule</title><updated>2021-11-21T07:52</updated><content type="html">&lt;p&gt;Using the &lt;span class=&#34;zettel-link-container folgeinv&#34;&gt;&lt;span class=&#34;zettel-link&#34; title=&#34;Zettel: Secretary Problem&#34;&gt;&lt;span data-nosnippet=&#34;&#34; style=&#34;user-select: none; color: gray&#34; title=&#34;Folgezettel&#34;&gt;#&lt;/span&gt;&lt;a href=&#34;secretary-problem&#34;&gt;secretary problem&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;span data-nosnippet=&#34;&#34;&gt;&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;, we get closer and closer to 37% as the number applicants increase.&lt;/p&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Number of Applicants&lt;/th&gt;&lt;th&gt;Take the Best Applicant After&lt;/th&gt;&lt;th&gt;Chance of Getting the Best&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;1 (33.33%)&lt;/td&gt;&lt;td&gt;50%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;1 (25%)&lt;/td&gt;&lt;td&gt;45.83%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2 (40%)&lt;/td&gt;&lt;td&gt;43.33%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2 (33.33%)&lt;/td&gt;&lt;td&gt;42.78%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;2 (28.57%)&lt;/td&gt;&lt;td&gt;41.43%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;3 (37.55%)&lt;/td&gt;&lt;td&gt;40.98%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3 (33.33%)&lt;/td&gt;&lt;td&gt;40.59%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;3 (30%)&lt;/td&gt;&lt;td&gt;39.87%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;7 (35%)&lt;/td&gt;&lt;td&gt;38.42%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;30&lt;/td&gt;&lt;td&gt;11 (36.67%)&lt;/td&gt;&lt;td&gt;37.86%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;40&lt;/td&gt;&lt;td&gt;15 (37.5%)&lt;/td&gt;&lt;td&gt;37.57%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;50&lt;/td&gt;&lt;td&gt;18 (36%)&lt;/td&gt;&lt;td&gt;37.43%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;100&lt;/td&gt;&lt;td&gt;37 (37%)&lt;/td&gt;&lt;td&gt;37.10%&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;1000&lt;/td&gt;&lt;td&gt;369 (36.9%)&lt;/td&gt;&lt;td&gt;36.81%&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;blockquote&gt;&lt;p&gt;How to optimally choose a secretary&lt;span data-nosnippet=&#34;&#34;&gt;&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn2&#34; id=&#34;fnref2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;div id=&#34;footnotes&#34;&gt;&lt;ol&gt;&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;&lt;a href=&#34;https://en.m.wikipedia.org/wiki/Secretary_problem&#34;&gt;https://en.m.wikipedia.org/wiki/Secretary_problem&lt;/a&gt; “Secretary Problem”&lt;/p&gt;&lt;a href=&#34;#fnref1&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&lt;li id=&#34;fn2&#34;&gt;&lt;p&gt;&lt;em&gt;Algorithms to Live By&lt;/em&gt; by Brian Christian and Tom Griffiths - Optimal Stopping&lt;/p&gt;&lt;a href=&#34;#fnref2&#34;&gt;↩︎&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</content><link href="https://marklucernas.dev/the-37-percent-rule"/></entry></feed>